type Query {
    hostById(id: ID!): Host
    getAllHosts: [Host]
}

type Mutation{
    createUpdateHost(hostUpdateRequest: HostUpdateRequest): Host
}

type Host {
    id: ID
    firstName: String
    lastName: String
    phone: [Phone]
    email: [Email]
    address: Address
    beds: Int
    crib: Boolean
    fullBath: Boolean
    privateEntrance: Boolean
    notes: String
    primaryContactMethod: ContactMethod
    createdDate: String
    lastUpdated: String
}

input HostInput {
    id: ID
    firstName: String
    lastName: String
    phone: [PhoneInput]
    email: [EmailInput]
    address: AddressInput
    beds: Int
    crib: Boolean
    fullBath: Boolean
    privateEntrance: Boolean
    notes: String
    primaryContactMethod: ContactMethod
    createdDate: String
    lastUpdated: String
}

input HostUpdateRequest{
    host: HostInput
}

type Phone {
    type: PhoneType
    value: String
    isPrimary: Boolean
}

input PhoneInput {
    type: PhoneType
    value: String
    isPrimary: Boolean
}

enum PhoneType {
    HOME
    WORK
    MOBILE
}

type Email {
    type: EmailType
    value: String
    isPrimary: Boolean
}
input EmailInput {
    type: EmailType
    value: String
    isPrimary: Boolean
}
enum EmailType {
    PERSONAL
    WORK
}

type Address {
    addressLine1: String
    addressLine2: String
    city: String
    state: String
    zip: String
}
input AddressInput {
    addressLine1: String
    addressLine2: String
    city: String
    state: String
    zip: String
}
enum ContactMethod {
    PHONE
    EMAIL
}

